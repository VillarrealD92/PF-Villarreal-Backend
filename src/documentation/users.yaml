paths:
  /users:
    get:
      summary: Obtiene todos los usuarios
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserDTO'
        '500':
          description: Error interno del servidor
      tags:
        - Users

    delete:
      summary: Elimina usuarios inactivos
      responses:
        '200':
          description: Usuarios inactivos eliminados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: object
                    example: {}
        '500':
          description: Error interno del servidor
      tags:
        - Users

  "/users/user (findbyemail)":
    get:
      summary: Obtiene un usuario por correo electrónico
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: Correo electrónico del usuario
      responses:
        '200':
          description: Usuario encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/UserDTO'
        '500':
          description: Error interno del servidor
      tags:
        - Users

  "/users/user (Role)":
    put:
      summary: Cambia el rol de un usuario
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: Correo electrónico del usuario
        - in: query
          name: role
          required: true
          schema:
            type: string
          description: Nuevo rol del usuario
      responses:
        '200':
          description: Rol de usuario cambiado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: object
                    example: {}
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno del servidor
      tags:
        - Users

  "/users/deleteUser/{userId}":
    delete:
      summary: Elimina un usuario por su ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID del usuario a eliminar
      responses:
        '200':
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: object
                    example: {}
        '500':
          description: Error interno del servidor
      tags:
        - Users

  "/users/{uid}/premium":
    post:
      summary: Actualiza un usuario a premium
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario a actualizar
      responses:
        '200':
          description: Usuario actualizado a premium exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/UserDTO'
        '400':
          description: El usuario ya es premium
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno del servidor
      tags:
        - Users

  "/users/{uid}/documents":
    post:
      summary: Sube documentos para un usuario
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Documentos cargados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: object
                    example: {}
        '400':
          description: No se adjuntaron archivos
        '500':
          description: Error interno del servidor
      tags:
        - Users

  "/users/usersWithDocuments":
    get:
      summary: Obtiene todos los usuarios con documentos cargados
      responses:
        '200':
          description: Lista de usuarios con documentos obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserDTO'
        '500':
          description: Error interno del servidor
      tags:
        - Users

components:
  schemas:
    UserDTO:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        age:
          type: integer
        role:
          type: string
          enum: [admin, user, premium]
        cart:
          type: string
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              reference:
                type: string
        tickets:
          type: array
          items:
            type: string
        last_connection:
          type: string
          format: date-time